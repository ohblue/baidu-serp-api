# This workflow will upload a Python Package using pyproject.toml when a release is created
# Compatible build method to ensure metadata version compatibility

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Clean all build artifacts and caches
      run: |
        rm -rf dist/
        rm -rf build/
        rm -rf *.egg-info/
        rm -rf .eggs/
        find . -type d -name __pycache__ -exec rm -rf {} + || true
        find . -type f -name "*.pyc" -delete || true
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools==75.6.0 wheel build twine
    
    - name: Build package
      run: python -m build
    
    - name: Verify package metadata
      run: twine check dist/*
    
    - name: Publish to PyPI using Trusted Publishers
      uses: pypa/gh-action-pypi-publish@v1.8.14
      # No user/password needed when using Trusted Publishers
      # The action will automatically use OIDC token for authentication
